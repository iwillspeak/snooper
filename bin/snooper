#! /usr/bin/env ruby

# Author::    Will Speak  (@willspeak)
# Copyright:: Copyright (c) 2013, 2014 Will Speak
# License::   Snoop is open source! See LICENCE.md for more details.

require 'snooper'
require 'colored'

##
# Internal: Main program loop
#
# config - the hash containing the options.
#
# Do our stuff, and exit cleanly when interrupted.
#
# Returns nothing.
def test_loop(options)
  Snooper.watch options
rescue Interrupt
  puts # This is where the ^C is on unix
  puts "Testing over, time for a coffee...".yellow
end

##
# Internal: Print out an error AND exit
#
# error - The error string to print.
#
# returns nothing.
def fatal_error(error)
  $stderr.puts "#{$0}: error: #{error}"
  exit 1
end

options = Snooper::Options.parse ARGV

if options.command == 'init'
  require 'fileutils'

  target = File.join Dir.pwd, ".snooper.yaml"
  if File.exists? target
    fatal_error "Configuration file '#{target}' already exists"
  end

  source = File.expand_path "../../data/_snooper.yaml", __FILE__

  puts "Creating Snooper configuration file '#{target}'"
  FileUtils::Verbose::cp source, target

  exit 0
end

if options.config_path.nil?
  fatal_error "couldn't find a config file. Did you miss a `--config=`?"
end

begin
  config = Snooper::Config.load options.config_path
rescue Exception => error
  fatal_error "couldn't load '#{options.config_path}' (#{error})"
end

# Override the command if one was specified
config.command = options.command if options.command

# Force polling if command line flag is set
config.force_poll = options.poll if options.poll

# Run the tests, pusing the target directory
test_loop config
